name: Docker release

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:

  get-tag:

    if: github.repository_owner == 'autowarefoundation'

    runs-on: ubuntu-latest
    outputs:
      tag_ref: ${{ steps.get_tag.outputs.tag_ref }}

    steps:
      - name: Get tag
        id: get_tag
        run: |
          TAG_REF=${{ github.ref }}
          TAG_REF=`echo $TAG_REF | cut -c11-`
          echo ::set-output name=tag_ref::$TAG_REF
      - name: Echo tag
        run: echo ${{ steps.get_tag.outputs.tag_ref }}

  build-push-docker:
      needs: get-tag

      if: github.repository_owner == 'autowarefoundation'

      runs-on: ${{ matrix.os }}
      strategy:
        matrix:
          os: [ubuntu-latest, ARM64]
      env:
        IMAGE_NAME: autoware/model-zoo-tvm-cli
        TAG_NAME: ${{ needs.get-tag.outputs.tag_ref }}

      steps:

        - name: Checkout
          uses: actions/checkout@v2

        - name: image build
          run: |
            docker login -u "${{ secrets.DKR_USR }}" -p "${{ secrets.DKR_PASS }}"
            ./scripts/tvm_cli/build.sh -i "$IMAGE_NAME" -t latest --ci

        - name: amd64 image push
          if: contains(matrix.os, 'ubuntu-latest')
          run: |
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:latest-amd64
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:$TAG_NAME-amd64
            docker push $IMAGE_NAME:$TAG_NAME-amd64
            docker push $IMAGE_NAME:latest-amd64

        - name: arm64 image push
          if: contains(matrix.os, 'ARM64')
          run: |
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:latest-arm64
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:$TAG_NAME-arm64
            docker push $IMAGE_NAME:$TAG_NAME-arm64
            docker push $IMAGE_NAME:latest-arm64

  build-push-docker-cuda:
      needs: get-tag

      if: github.repository_owner == 'autowarefoundation'

      runs-on: ${{ matrix.os }}
      strategy:
        matrix:
          os: [ubuntu-latest, ARM64]
      env:
        IMAGE_NAME: autoware/model-zoo-tvm-cli
        TAG_NAME: ${{ needs.get-tag.outputs.tag_ref }}-cuda

      steps:

        - name: Checkout
          uses: actions/checkout@v2

        - name: image build with cuda
          run: |
            docker login -u "${{ secrets.DKR_USR }}" -p "${{ secrets.DKR_PASS }}"
            ./scripts/tvm_cli/build.sh -c -i "$IMAGE_NAME" -t latest-cuda --ci

        - name: amd64 cuda image push
          if: contains(matrix.os, 'ubuntu-latest')
          run: |
            docker tag $IMAGE_NAME:latest-cuda $IMAGE_NAME:latest-cuda-amd64
            docker tag $IMAGE_NAME:latest-cuda $IMAGE_NAME:$TAG_NAME-amd64
            docker push $IMAGE_NAME:$TAG_NAME-amd64
            docker push $IMAGE_NAME:latest-cuda-amd64

        - name: arm64 cuda image push
          if: contains(matrix.os, 'ARM64')
          run: |
            docker tag $IMAGE_NAME:latest-cuda $IMAGE_NAME:latest-cuda-arm64
            docker tag $IMAGE_NAME:latest-cuda $IMAGE_NAME:$TAG_NAME-arm64
            docker push $IMAGE_NAME:$TAG_NAME-arm64
            docker push $IMAGE_NAME:latest-cuda-arm64

  platforms-bundle-latest:

    if: github.repository_owner == 'autowarefoundation'

    needs: [build-push-docker, build-push-docker-cuda]

    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: autoware/model-zoo-tvm-cli
      TAG_NAME: latest
    steps:

      - name: Manifest build and push
        run: |
          docker login -u "${{ secrets.DKR_USR }}" -p "${{ secrets.DKR_PASS }}"
          export DOCKER_CLI_EXPERIMENTAL=enabled
          docker manifest create $IMAGE_NAME:$TAG_NAME --amend $IMAGE_NAME:$TAG_NAME-amd64 --amend $IMAGE_NAME:$TAG_NAME-arm64
          docker manifest push $IMAGE_NAME:$TAG_NAME

      - name: Manifest build and push cuda
        run: |
          docker login -u "${{ secrets.DKR_USR }}" -p "${{ secrets.DKR_PASS }}"
          export DOCKER_CLI_EXPERIMENTAL=enabled
          docker manifest create $IMAGE_NAME:$TAG_NAME-cuda --amend $IMAGE_NAME:$TAG_NAME-cuda-amd64 --amend $IMAGE_NAME:$TAG_NAME-cuda-arm64
          docker manifest push $IMAGE_NAME:$TAG_NAME-cuda

  platforms-bundle-release:

    if: github.repository_owner == 'autowarefoundation'

    needs: [get-tag, build-push-docker, build-push-docker-cuda]

    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: autoware/model-zoo-tvm-cli
      TAG_NAME: ${{ needs.get-tag.outputs.tag_ref }}
    steps:

      - name: Manifest build and push
        run: |
          docker login -u "${{ secrets.DKR_USR }}" -p "${{ secrets.DKR_PASS }}"
          export DOCKER_CLI_EXPERIMENTAL=enabled
          docker manifest create $IMAGE_NAME:$TAG_NAME --amend $IMAGE_NAME:$TAG_NAME-amd64 --amend $IMAGE_NAME:$TAG_NAME-arm64
          docker manifest push $IMAGE_NAME:$TAG_NAME

      - name: Manifest build and push cuda
        run: |
          docker login -u "${{ secrets.DKR_USR }}" -p "${{ secrets.DKR_PASS }}"
          export DOCKER_CLI_EXPERIMENTAL=enabled
          docker manifest create $IMAGE_NAME:$TAG_NAME-cuda --amend $IMAGE_NAME:$TAG_NAME-cuda-amd64 --amend $IMAGE_NAME:$TAG_NAME-cuda-arm64
          docker manifest push $IMAGE_NAME:$TAG_NAME-cuda
