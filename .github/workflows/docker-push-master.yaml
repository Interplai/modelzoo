name: Docker push on master

on:
  push:
    branches:
      - master
    paths:
      - 'scripts/tvm_cli/**'

jobs:

  build-push-docker:

      if: github.repository_owner == 'autowarefoundation'

      runs-on: ${{ matrix.os }}
      strategy:
        matrix:
          os: [ubuntu-latest, ARM64]
      env:
        IMAGE_NAME: autoware/model-zoo-tvm-cli
        TAG_NAME: bleedingedge

      steps:

        - name: Checkout
          uses: actions/checkout@v2

        - name: image build
          run: |
            docker login -u "${{ secrets.DKR_USR }}" -p "${{ secrets.DKR_PASS }}"
            ./scripts/tvm_cli/build.sh -i "$IMAGE_NAME" -t "$TAG_NAME" --ci

        - name: amd64 image re-tag and push
          if: contains(matrix.os, 'ubuntu-latest')
          run: |
            docker tag $IMAGE_NAME:$TAG_NAME $IMAGE_NAME:$TAG_NAME-amd64
            docker push $IMAGE_NAME:$TAG_NAME-amd64

        - name: arm64 image re-tag and push
          if: contains(matrix.os, 'ARM64')
          run: |
            docker tag $IMAGE_NAME:$TAG_NAME $IMAGE_NAME:$TAG_NAME-arm64
            docker push $IMAGE_NAME:$TAG_NAME-arm64

        - name: docker logout
          if: ${{ always() }}
          run: docker logout

  build-push-docker-cuda:

      if: github.repository_owner == 'autowarefoundation'

      runs-on: ${{ matrix.os }}
      strategy:
        matrix:
          os: [ubuntu-latest, ARM64]
      env:
        IMAGE_NAME: autoware/model-zoo-tvm-cli
        TAG_NAME: bleedingedge-cuda

      steps:

        - name: Checkout
          uses: actions/checkout@v2

        - name: image build with cuda
          run: |
            docker login -u "${{ secrets.DKR_USR }}" -p "${{ secrets.DKR_PASS }}"
            ./scripts/tvm_cli/build.sh -c -i "$IMAGE_NAME" -t "$TAG_NAME" --ci

        - name: amd64 cuda image re-tag and push
          if: contains(matrix.os, 'ubuntu-latest')
          run: |
            docker tag $IMAGE_NAME:$TAG_NAME $IMAGE_NAME:$TAG_NAME-amd64
            docker push $IMAGE_NAME:$TAG_NAME-amd64

        - name: arm64 cuda image re-tag and push
          if: contains(matrix.os, 'ARM64')
          run: |
            docker tag $IMAGE_NAME:$TAG_NAME $IMAGE_NAME:$TAG_NAME-arm64
            docker push $IMAGE_NAME:$TAG_NAME-arm64

        - name: docker logout
          if: ${{ always() }}
          run: docker logout

  platforms-bundle:

    if: github.repository_owner == 'autowarefoundation'

    needs: [build-push-docker, build-push-docker-cuda]

    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: autoware/model-zoo-tvm-cli
      TAG_NAME: bleedingedge

    steps:

      - name: Manifest build and push
        run: |
          docker login -u "${{ secrets.DKR_USR }}" -p "${{ secrets.DKR_PASS }}"
          export DOCKER_CLI_EXPERIMENTAL=enabled
          docker manifest create $IMAGE_NAME:$TAG_NAME --amend $IMAGE_NAME:$TAG_NAME-amd64 --amend $IMAGE_NAME:$TAG_NAME-arm64
          docker manifest push $IMAGE_NAME:$TAG_NAME

      - name: Manifest build and push cuda
        run: |
          export DOCKER_CLI_EXPERIMENTAL=enabled
          docker manifest create $IMAGE_NAME:$TAG_NAME-cuda --amend $IMAGE_NAME:$TAG_NAME-cuda-amd64 --amend $IMAGE_NAME:$TAG_NAME-cuda-arm64
          docker manifest push $IMAGE_NAME:$TAG_NAME-cuda

      - name: docker logout
        if: ${{ always() }}
        run: docker logout
